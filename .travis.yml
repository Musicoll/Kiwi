language: cpp
sudo: true

# No Email notification
notifications:
  email: false

matrix:
  include:
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-4.9']
      before_install:
        - echo "yes" | sudo add-apt-repository ppa:kalakris/cmake
        - sudo apt-get update -qq
        - sudo apt-get install cmake
        - mkdir build
      install:
        # install latest LCOV (1.9 was failing)
        - cd build
        - wget http://ftp.de.debian.org/debian/pool/main/l/lcov/lcov_1.11.orig.tar.gz
        - tar xf lcov_1.11.orig.tar.gz
        - sudo make -C lcov-1.11/ install
        # install lcov to coveralls conversion + upload tool
        - gem install coveralls-lcov
        - lcov --version
        - g++ --version
      before_script:
        - cd ${TRAVIS_BUILD_DIR}
        # init coverage to 0 (optional)
        - lcov --directory . --zerocounters
      script:
        - cd build
        - export CXX=$COMPILER
        - cmake ..
        - make
        - ./test_core
        - ./test_dsp
      after_success:
        - cd build
        # capture coverage info
        - lcov --directory . --capture --output-file coverage.info
        # filter out system and test code
        - lcov --remove coverage.info 'test/*' '/usr/*' --output-file coverage.info
        - lcov --list coverage.info
        - coveralls-lcov --repo-token ${COVERALLS_TOKEN} coverage.info
      env: COMPILER=g++-4.9

    - os: linux
      compiler: clang
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-precise-3.6']
          packages: ['clang-3.6']
      before_install:
        - echo "yes" | sudo add-apt-repository ppa:kalakris/cmake
        - sudo apt-get update -qq
        - sudo apt-get install cmake
      env: COMPILER=clang++-3.6

    - os: osx
      compiler: gcc
      env: COMPILER=g++-4.9

    - os: osx
      compiler: clang++
      env: COMPILER=clang++

script:
  - mkdir build
  - cd build
  - export CXX=$COMPILER
  - cmake ..
  - make

after_success:
  - ./test_core
  - ./test_dsp
